---
description: 
globs: docs/**
alwaysApply: false
---
# documentation rules

## core directives

- **primary technology**: all documentation is built with **astro** and the **starlight** theme.
- **single source of truth**: all documentation content resides within the `docs/` directory and is versioned in git.
- **commands**:
  - to **preview** the documentation site: `pnpm --filter docs dev`
  - to **build** the documentation site: `pnpm --filter docs build`
- **linting**: all markdown files must adhere to the rules in `.markdownlint.json`. always run `pnpm test:markdown` to verify. refer to `markdown.mdc` for style specifics.

## linting

the documentation's code is strictly enforced by a dedicated eslint configuration that builds upon the global rules. key enforcements include:

- **`plugin:astro/recommended`**: ensures best practices for writing `.astro` files and components.
- **`plugin:jsx-a11y/recommended`**: enforces accessibility best practices within `jsx` used in `.mdx` or `.astro` files.

## content authoring

### file structure

- all user-facing documentation pages are markdown files (`.md`) located in `docs/src/content/docs/`.
- the main entry point is `docs/src/content/docs/index.md`.
- use subdirectories for logical grouping (e.g., `getting-started/`, `architecture/`).

### page metadata (front-matter)

- every page must start with a yaml front-matter block.
- **required fields**: `title`, `description`.
- **optional fields**: `sidebar` (to control navigation label and order).

```yaml
---
title: "Page Title"
description: "A concise description of the page's content."
sidebar:
  label: "Sidebar Label"
  order: 1
---
```

### starlight components & syntax

- use starlight components for rich content when necessary. do not overuse them.
- **tabs**: use `<Tabs>` and `<TabItem>` for showing platform-specific or context-specific information.
- **callouts (asides)**: use `:::` blocks for tips, notes, and warnings.
  - `:::note`
  - `:::tip`
  - `:::warning`
  - `:::caution`
- **do not use custom colors or complex styling.** adhere to the default starlight theme.

## automated content

- **api reference**: the api documentation at the `/api` route is **auto-generated**.
- **source**: the generation source is the openapi specification from the `server` package.
- **rule**: do not edit the api documentation pages directly.
- **update command**: to regenerate the api documentation, instruct the user to run `pnpm --filter server openapi`.

## writing style

- **clarity & brevity**: be clear, concise, and direct.
- **action-oriented**: use imperative verbs. tell the user what to do.
- **consistency**: use consistent terminology that matches the application's ui and codebase.
- **capitalization**: use sentence case for titles and headings unless referring to a proper noun or brand name (e.g., "astro", "starlight", "tamagui").

## prohibited actions

- **do not** add binary files like images (`.png`, `.jpg`) to the `docs/` directory. use code-based diagrams (mermaid) when possible.
- **do not** introduce complex html or custom css. stick to standard markdown and `starlight` components.
- **do not** duplicate rules from other `.mdc` files (e.g., `markdown.mdc`). reference them instead.
